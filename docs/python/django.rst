Django
======

General
-------

-  Delete empty, auto-generated files.

Models
------

-  Use ``help_text`` and ``verbose_name`` to describe fields.
-  Use ``TextField``, not ``CharField``. There is `no performance difference <https://www.postgresql.org/docs/11/datatype-character.html>`__ in PostgreSQL.
-  Do not use ``null=True`` with ``TextField`` or ``CharField``, as `recommended by Django <https://docs.djangoproject.com/en/3.2/ref/models/fields/#null>`__. 

Forms
-----

-  Use ``help_text`` and ``label`` to describe fields.

Admin
-----

-  Configure list views for easy of use using ``list_display``, ``list_editable``, ``list_filter``
-  Configure ``fieldsets`` (or ``fields`` if there are only a few) to group and order fields logically
-  Configure ``readonly_fields``, so that the administrator knows whether to edit a field

Templates
---------

In many cases, you can achieve the same outcome using either `context processors <https://docs.djangoproject.com/en/3.2/ref/templates/api/#writing-your-own-context-processors>`__ or `inclusion tags <https://docs.djangoproject.com/en/3.2/howto/custom-template-tags/#inclusion-tags>`__. If the variables that the template uses are constant (e.g. from a Django settings file), use a context processor. Otherwise, use an inclusion tag.

Settings
--------

To simplify the configuration of Django projects in production, use :ref:`this template<django-template>` and follow these instructions.

Use a single `Django settings file <https://docs.djangoproject.com/en/3.2/topics/settings/>`__, in which values are read from environment variables, and in which the default values are appropriate for all developers. In production, a `uWSGI INI file <https://github.com/open-contracting/deploy/blob/main/salt/uwsgi/files/django.ini>`__ or a `Docker Compose .env file <https://docs.docker.com/compose/environment-variables/>`__ can override these values. In testing, a GitHub Actions workflow can override these values.

Do not enable more applications than necessary in the `INSTALLED_APPS <https://docs.djangoproject.com/en/3.2/ref/settings/#std:setting-INSTALLED_APPS>`__ setting. Among the `default applications <https://github.com/django/django/blob/main/django/conf/project_template/project_name/settings.py-tpl>`__:

`django.contrib.admin <https://docs.djangoproject.com/en/3.2/ref/contrib/admin/>`__ (`tutorial <https://docs.djangoproject.com/en/3.2/intro/tutorial02/>`__)
  Remove, unless using the Django admin (check for occurrences of ``admin``)
`django.contrib.auth <https://docs.djangoproject.com/en/3.2/ref/contrib/auth/>`__ (`topic <https://docs.djangoproject.com/en/3.2/topics/auth/>`__)
  Remove, unless using ``django.contrib.admin`` or authenticated users (check for occurrences of ``auth`` or ``user``)
`django.contrib.messages <https://docs.djangoproject.com/en/3.2/ref/contrib/messages/>`__
  Remove, unless using ``django.contrib.admin`` or one-time messages (check for occurrences of ``messages``)
`django.contrib.contenttypes <https://docs.djangoproject.com/en/3.2/ref/contrib/contenttypes/>`__
  Remove, unless using ``django.contrib.admin``, ``django.contrib.auth`` or otherwise dependent
django.contrib.sessions (`topic <https://docs.djangoproject.com/en/3.2/topics/http/sessions/>`__)
  Remove, unless using ``django.contrib.admin``, ``django.contrib.auth``, ``django.contrib.messages`` or anonymous sessions (check for occurrences of ``session``)
`django.contrib.staticfiles <https://docs.djangoproject.com/en/3.2/ref/contrib/staticfiles/>`__ (`how-to <https://docs.djangoproject.com/en/3.2/howto/static-files/>`__)
  Remove, unless the project contains static files

Generate a default ``SECRET_KEY`` value:

.. code-block:: bash

   python manage.py shell -c 'from django.core.management import utils; print(utils.get_random_secret_key())'

Add `dj-database-url <https://github.com/kennethreitz/dj-database-url#readme>`__ to your :ref:`requirements file<application-requirements>`, and refer to its documentation.

.. _django-template:

Template
~~~~~~~~

This template is based on the `default settings.py file <https://github.com/django/django/blob/stable/3.2.x/django/conf/project_template/project_name/settings.py-tpl>`__:

.. code-block:: python

   """
   Django settings for the project.

   Generated by 'django-admin startproject' using Django 3.2.8.

   For more information on this file, see
   https://docs.djangoproject.com/en/3.2/topics/settings/

   For the full list of settings and their values, see
   https://docs.djangoproject.com/en/3.2/ref/settings/
   """

   from pathlib import Path

   # Build paths inside the project like this: BASE_DIR / 'subdir'.
   BASE_DIR = Path(__file__).resolve().parent.parent


   # Quick-start development settings - unsuitable for production
   # See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

   # SECURITY WARNING: keep the secret key used in production secret!
   SECRET_KEY = '{{ secret_key }}'

   # SECURITY WARNING: don't run with debug turned on in production!
   DEBUG = True

   ALLOWED_HOSTS = []


   # Application definition

   INSTALLED_APPS = [
       'django.contrib.admin',
       'django.contrib.auth',
       'django.contrib.contenttypes',
       'django.contrib.sessions',
       'django.contrib.messages',
       'django.contrib.staticfiles',
   ]

   MIDDLEWARE = [
       'django.middleware.security.SecurityMiddleware',
       'django.contrib.sessions.middleware.SessionMiddleware',
       'django.middleware.common.CommonMiddleware',
       'django.middleware.csrf.CsrfViewMiddleware',
       'django.contrib.auth.middleware.AuthenticationMiddleware',
       'django.contrib.messages.middleware.MessageMiddleware',
       'django.middleware.clickjacking.XFrameOptionsMiddleware',
   ]

   ROOT_URLCONF = '{{ project_name }}.urls'

   TEMPLATES = [
       {
           'BACKEND': 'django.template.backends.django.DjangoTemplates',
           'DIRS': [],
           'APP_DIRS': True,
           'OPTIONS': {
               'context_processors': [
                   'django.template.context_processors.debug',
                   'django.template.context_processors.request',
                   'django.contrib.auth.context_processors.auth',
                   'django.contrib.messages.context_processors.messages',
               ],
           },
       },
   ]

   WSGI_APPLICATION = '{{ project_name }}.wsgi.application'


   # Database
   # https://docs.djangoproject.com/en/3.2/ref/settings/#databases

   DATABASES = {
       'default': {
           'ENGINE': 'django.db.backends.sqlite3',
           'NAME': BASE_DIR / 'db.sqlite3',
       }
   }


   # Password validation
   # https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

   AUTH_PASSWORD_VALIDATORS = [
       {
           'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
       },
       {
           'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
       },
       {
           'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
       },
       {
           'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
       },
   ]


   # Internationalization
   # https://docs.djangoproject.com/en/3.2/topics/i18n/

   LANGUAGE_CODE = 'en-us'

   TIME_ZONE = 'UTC'

   USE_I18N = True

   USE_L10N = True

   USE_TZ = True


   # Static files (CSS, JavaScript, Images)
   # https://docs.djangoproject.com/en/3.2/howto/static-files/

   STATIC_URL = '/static/'

   # Default primary key field type
   # https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

   DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

Deployment
----------

-  Use the `Deployment checklist <https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/>`__

.. _django-performance:

Performance
-----------

-  `Performance and optimization <https://docs.djangoproject.com/en/3.2/topics/performance/>`__
-  `Database access optimization <https://docs.djangoproject.com/en/3.2/topics/db/optimization/>`__
-  Deployment checklist: `Performance optimizations <https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/#performance-optimizations>`__

Reference
---------

-  `The Django admin site <https://docs.djangoproject.com/en/3.2/ref/contrib/admin/>`__
-  `Deploying Django <https://docs.djangoproject.com/en/3.2/howto/deployment/>`__
